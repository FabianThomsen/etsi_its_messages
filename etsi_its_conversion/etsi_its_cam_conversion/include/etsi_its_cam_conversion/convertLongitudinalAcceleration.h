#pragma once

#include <etsi_its_cam_coding/LongitudinalAcceleration.h>
#include <etsi_its_cam_msgs/LongitudinalAcceleration.h>
#include <etsi_its_cam_conversion/convertLongitudinalAccelerationValue.h>
#include <etsi_its_cam_conversion/convertAccelerationConfidence.h>

namespace etsi_its_cam_conversion
{
	etsi_its_cam_msgs::LongitudinalAcceleration convert_LongitudinalAccelerationtoRos(const LongitudinalAcceleration_t& _LongitudinalAcceleration_in)
	{
		etsi_its_cam_msgs::LongitudinalAcceleration LongitudinalAcceleration_out;
		LongitudinalAcceleration_out.longitudinalAccelerationValue = convert_LongitudinalAccelerationValuetoRos(_LongitudinalAcceleration_in.longitudinalAccelerationValue);
		LongitudinalAcceleration_out.longitudinalAccelerationConfidence = convert_AccelerationConfidencetoRos(_LongitudinalAcceleration_in.longitudinalAccelerationConfidence);
		return LongitudinalAcceleration_out;
	}
	LongitudinalAcceleration_t convert_LongitudinalAccelerationtoC(const etsi_its_cam_msgs::LongitudinalAcceleration& _LongitudinalAcceleration_in)
	{
		LongitudinalAcceleration_t LongitudinalAcceleration_out;
		memset(&LongitudinalAcceleration_out, 0, sizeof(LongitudinalAcceleration_t));
		LongitudinalAcceleration_out.longitudinalAccelerationValue = convert_LongitudinalAccelerationValuetoC(_LongitudinalAcceleration_in.longitudinalAccelerationValue);
		LongitudinalAcceleration_out.longitudinalAccelerationConfidence = convert_AccelerationConfidencetoC(_LongitudinalAcceleration_in.longitudinalAccelerationConfidence);
		return LongitudinalAcceleration_out;
	}
}