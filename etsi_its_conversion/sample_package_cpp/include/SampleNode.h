#pragma once

#include <memory>
#include <string>

#include <ros/ros.h>
#include <dynamic_reconfigure/server.h>
#include <sample_package_cpp/params_SampleNodeConfig.h>     // generated by dynamic_reconfigure
#include <std_msgs/String.h>


namespace sample_package_cpp {

class SampleNode {

  public:
    SampleNode();

  private:
    void dynamicReconfigureCallback(params_SampleNodeConfig &config, uint32_t level);
    void timerCallback(const ros::TimerEvent& event);
    void messageCallback(const std_msgs::String& msg);

    ros::NodeHandle node_handle_;
    ros::NodeHandle private_node_handle_;

    std::shared_ptr<dynamic_reconfigure::Server<params_SampleNodeConfig>> dynamic_reconfigure_server_;

    ros::Publisher pub_;
    ros::Subscriber sub_;

    ros::Timer timer_;

    float parameter_float_;
    bool parameter_bool_;
    std::string parameter_string_;

    bool create_publisher_;
    bool create_subscriber_;

};


}  // end of namespace sample_package_cpp
