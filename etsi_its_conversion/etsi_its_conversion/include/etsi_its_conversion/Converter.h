#pragma once

#include <memory>
#include <string>

#include <ros/ros.h>
#include <nodelet/nodelet.h>
#include <dynamic_reconfigure/server.h>
#include <etsi_its_conversion/dynamicReconfigureConfig.h>     // generated by dynamic_reconfigure
#include <std_msgs/String.h>


namespace etsi_its_conversion {


class Converter : public nodelet::Nodelet {

  public:

    Converter();
    ~Converter();
    virtual void onInit();

  private:

    void dynamicReconfigureCallback(dynamicReconfigureConfig &config, uint32_t level);
    void timerCallback(const ros::TimerEvent& event);
    void messageCallback(const std_msgs::StringConstPtr msg);

  private:

    ros::NodeHandle node_handle_;
    ros::NodeHandle private_node_handle_;

    std::shared_ptr<dynamic_reconfigure::Server<dynamicReconfigureConfig>> dynamic_reconfigure_server_;

    ros::Publisher pub_;
    ros::Subscriber sub_;

    ros::Timer timer_;

    float parameter_float_;
    bool parameter_bool_;
    std::string parameter_string_;

    bool create_publisher_;
    bool create_subscriber_;

};


}  // end of namespace
